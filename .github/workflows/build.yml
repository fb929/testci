name: Build

#on:
#  push:
#    branches:
#      - main
on:
  workflow_dispatch:

permissions:
  contents: 'write'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          #- macos-14
          - ubuntu-latest
          #- windows-latest
    steps:
#      - name: test macos
#        if: startsWith(matrix.os, 'macos') && (matrix.os == 'macos-14' || matrix.os > 'macos-14')
#        run: echo ${{ matrix.os }}
#
#      - name: test startsWith macos
#        if: ${{ startsWith(matrix.os, 'macos-') }}
#        run: echo "is macos"
#
#      - name: test startsWith not macos
#        if: ${{ !startsWith(matrix.os, 'macos-') }}
#        run: echo "is not macos"

      - name: Checkout repository
        uses: actions/checkout@v4

#      - name: build
#        run: echo 'testbytest' > build.txt
#
#      - name: Get latest release via API
#        id: latest_release_info
#        uses: actions/github-script@v7
#        with:
#          script: |
#            const latest = await github.rest.repos.getLatestRelease({
#              owner: context.repo.owner,
#              repo: context.repo.repo
#            })
#            core.setOutput("tag_name", latest.data.tag_name)
#
#      - name: Compute nightly version
#        id: nightly_info
#        run: |
#          TS=$(date -u +"%Y%m%d%H%M%S")
#          echo "version=${{ steps.latest_release_info.outputs.tag_name }}-nightly-${TS}" >> $GITHUB_OUTPUT
#
#      - name: Use release information
#        run: |
#          echo "Latest release tag: ${{ steps.latest_release_info.outputs.tag_name }}"
#          echo "Nightly version: ${{ steps.nightly_info.outputs.version }}"
#
#      - name: Create GitHub Release from current commit (prerelease)
#        uses: softprops/action-gh-release@v2
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#        with:
#          tag_name: ${{ steps.nightly_info.outputs.version }} # create new tag
#          target_commitish: ${{ github.sha }}                 # set current commit for new tag
#          prerelease: true
#          make_latest: false
#          generate_release_notes: true
#          files: |
#            build.txt

      - uses: actions/github-script@v7
        id: anytype-heart-nightly-info
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: releases } = await github.repos.listReleases({
              owner: 'anyproto',
              repo: 'anytype-heart',
            });
            const nightly = releases.find(r => r.tag_name.includes("nightly"));
            core.setOutput("release", nightly.tag_name);


      - name: Debug
        run: |
          echo "Nightly release is ${{ steps.anytype-heart-nightly-info.outputs.release }}"
          MIDDLEWARE_VERSION=${{ steps.anytype-heart-nightly-info.outputs.release }}
          if [[ $MIDDLEWARE_VERSION =~ ^v[0-9] ]]; then
              MIDDLEWARE_VERSION="${MIDDLEWARE_VERSION#v}"
          fi
          echo "MIDDLEWARE_VERSION=$MIDDLEWARE_VERSION"
